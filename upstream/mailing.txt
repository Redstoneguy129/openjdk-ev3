TODO for future me (https://openjdk.java.net/contribute/)

3. Submit a patch

Your patch must be built and tested on all relevant platforms before submission. Refer to the appropriate release-specific build and test instructions for JDK (build, test) or JDK Updates (build, test). If you have problems building, you may send your questions to the Build Group's mailing list. Note that a full build against recently synchronized sources with only your applied patch is required for each submitted change.

When your change is ready, send a message to the appropriate development list with a subject line of the form

    [PATCH] 6543210: My favorite bug

where 6543210 and My favorite bug are replaced as above. If no existing bug or RFE describes your change then omit the id number and one will be created and assigned.

The message should contain three things, either directly, or in the body as attachments:

    A description of the change, including a rationale for your approach and a discussion of any alternative approaches that were considered, if relevant. If no existing bug or RFE describes your change then also include a description of the problem that it solves or the need that it addresses.

    The code change itself, relative to an existing changeset in the appropriate Mercurial repository. The preferred form is generated by Mercurial's hg export command, with the -g option so that file renames are tracked correctly. The output of hg diff -g is also acceptable, and in the worst case traditional unified diffs (-u) are okay too, at least for simple changes.

    A unit test, written for the jtreg test harness, that validates your change. The test should fail when run against a build without the change and succeed when run against a build with the change. Unit tests aren't always practical, especially for changes such as performance improvements or fixes to bugs that are highly platform-dependent, but if practical then a unit test is required.
