diff --git a/src/hotspot/cpu/arm/vm_version_arm_32.cpp b/src/hotspot/cpu/arm/vm_version_arm_32.cpp
index f15dabd45..576f61cdb 100644
--- a/src/hotspot/cpu/arm/vm_version_arm_32.cpp
+++ b/src/hotspot/cpu/arm/vm_version_arm_32.cpp
@@ -104,13 +104,19 @@ extern "C" address check_vfp3_32_fault_instr;
 extern "C" address check_vfp_fault_instr;
 extern "C" address check_simd_fault_instr;
 
+static const volatile int * const kuser_ver_ptr = (int*)KUSER_HELPER_VERSION_ADDR;
+
 void VM_Version::early_initialize() {
 
   // Make sure that _arm_arch is initialized so that any calls to OrderAccess will
   // use proper dmb instruction
   get_os_cpu_info();
 
-  _kuser_helper_version = *(int*)KUSER_HELPER_VERSION_ADDR;
+  // Hide this memory read from ASAN, as this generates a segfault on 0x3fffe1ff.
+  // This workaround works even when the memory at KUSER_HELPER_VERSION_ADDR is in input operands.
+  //_kuser_helper_version = *(int*)KUSER_HELPER_VERSION_ADDR;
+  __asm__ ("ldr %0, [%1]\n\t" : "=r"(_kuser_helper_version) : "r"(kuser_ver_ptr), "m"(*kuser_ver_ptr) : );
+
   // armv7 has the ldrexd instruction that can be used to implement cx8
   // armv5 with linux >= 3.1 can use kernel helper routine
   _supports_cx8 = (supports_ldrexd() || supports_kuser_cmpxchg64());
