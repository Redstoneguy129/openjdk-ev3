diff -Naur a/make/autoconf/flags.m4 b/make/autoconf/flags.m4
--- a/make/autoconf/flags.m4	2018-10-27 19:33:58.000000000 +0200
+++ b/make/autoconf/flags.m4	2018-10-29 02:28:40.385243478 +0100
@@ -34,7 +34,7 @@
 AC_DEFUN([FLAGS_SETUP_ABI_PROFILE],
 [
   AC_ARG_WITH(abi-profile, [AS_HELP_STRING([--with-abi-profile],
-      [specify ABI profile for ARM builds (arm-vfp-sflt,arm-vfp-hflt,arm-sflt, armv5-vfp-sflt,armv6-vfp-hflt,arm64,aarch64) @<:@toolchain dependent@:>@ ])])
+      [specify ABI profile for ARM builds (arm-vfp-sflt,arm-vfp-hflt,arm-sflt, arm926ejs,armv5-vfp-sflt,armv6-vfp-hflt,arm64,aarch64) @<:@toolchain dependent@:>@ ])])
 
   if test "x$with_abi_profile" != x; then
     if test "x$OPENJDK_TARGET_CPU" != xarm && \
@@ -55,6 +55,9 @@
     elif test "x$OPENJDK_TARGET_ABI_PROFILE" = xarm-sflt; then
       ARM_FLOAT_TYPE=sflt
       ARM_ARCH_TYPE_FLAGS='-march=armv5t -marm'
+    elif test "x$OPENJDK_TARGET_ABI_PROFILE" = xarm926ejs; then
+      ARM_FLOAT_TYPE=sflt
+      ARM_ARCH_TYPE_FLAGS='-mcpu=arm926ej-s -marm'
     elif test "x$OPENJDK_TARGET_ABI_PROFILE" = xarmv5-vfp-sflt; then
       ARM_FLOAT_TYPE=vfp-sflt
       ARM_ARCH_TYPE_FLAGS='-march=armv5t -marm'
diff -Naur a/make/autoconf/flags-other.m4 b/make/autoconf/flags-other.m4
--- a/make/autoconf/flags-other.m4	2018-10-27 19:33:58.000000000 +0200
+++ b/make/autoconf/flags-other.m4	2018-10-29 02:28:40.385243478 +0100
@@ -121,6 +121,10 @@
   # Misuse EXTRA_CFLAGS to mimic old behavior
   $2JVM_ASFLAGS="$JVM_BASIC_ASFLAGS ${$2EXTRA_CFLAGS}"
 
+  if test "x$OPENJDK_TARGET_ABI_PROFILE" = xarm926ejs; then
+    $2JVM_ASFLAGS="$JVM_BASIC_ASFLAGS -mcpu=arm926ej-s"
+  fi
+
   AC_SUBST($2JVM_ASFLAGS)
 ])
 
diff -Naur a/src/hotspot/cpu/arm/assembler_arm_32.hpp b/src/hotspot/cpu/arm/assembler_arm_32.hpp
--- a/src/hotspot/cpu/arm/assembler_arm_32.hpp	2018-10-27 19:33:58.000000000 +0200
+++ b/src/hotspot/cpu/arm/assembler_arm_32.hpp	2018-10-29 02:28:40.389243589 +0100
@@ -498,7 +498,7 @@
   void dmb(DMB_Opt opt, Register reg) {
     if (VM_Version::arm_arch() >= 7) {
       emit_int32(0xF57FF050 | opt);
-    } else {
+    } else if (VM_Version::arm_arch() == 6) {
       bool preserve_tmp = (reg == noreg);
       if(preserve_tmp) {
         reg = Rtemp;
@@ -1239,10 +1239,11 @@
 
 // Imported code from glibc soft-fp bundle for
 // calculation accuracy improvement. See CR 6757269.
-extern double __aeabi_fadd_glibc(float, float);
-extern double __aeabi_fsub_glibc(float, float);
-extern double __aeabi_dadd_glibc(double, double);
-extern double __aeabi_dsub_glibc(double, double);
+#define __aeabi_fadd_glibc __aeabi_fadd
+#define __aeabi_fsub_glibc __aeabi_fsub
+#define __aeabi_dadd_glibc __aeabi_dadd
+#define __aeabi_dsub_glibc __aeabi_dsub
+
 };
 #endif // __SOFTFP__
 
diff -Naur a/src/hotspot/cpu/arm/vm_version_arm_32.cpp b/src/hotspot/cpu/arm/vm_version_arm_32.cpp
--- a/src/hotspot/cpu/arm/vm_version_arm_32.cpp	2018-10-27 19:33:58.000000000 +0200
+++ b/src/hotspot/cpu/arm/vm_version_arm_32.cpp	2018-10-29 02:28:40.393243701 +0100
@@ -303,6 +303,15 @@
     FLAG_SET_DEFAULT(UseUnalignedAccesses, false);
   }
 
+  // ARMv5 MP workaround
+  if (arm_arch() == 5) {
+    if (FLAG_IS_DEFAULT(AssumeMP)) {
+      FLAG_SET_DEFAULT(AssumeMP, false);
+    } else if (AssumeMP) {
+      warning("AssumeMP can not be true for ARMv5 as there is only uniprocessor support");
+      FLAG_SET_DEFAULT(AssumeMP, false);
+    }
+  }
   _is_initialized = true;
 }
 
diff -Naur a/src/hotspot/os_cpu/linux_arm/orderAccess_linux_arm.hpp b/src/hotspot/os_cpu/linux_arm/orderAccess_linux_arm.hpp
--- a/src/hotspot/os_cpu/linux_arm/orderAccess_linux_arm.hpp	2018-10-27 19:33:58.000000000 +0200
+++ b/src/hotspot/os_cpu/linux_arm/orderAccess_linux_arm.hpp	2018-10-29 02:28:40.393243701 +0100
@@ -72,7 +72,7 @@
      __asm__ volatile (
      ".word 0xF57FF050 | 0xf" : : : "memory");
 #endif
-   } else {
+   } else if (VM_Version::arm_arch() == 6) {
      intptr_t zero = 0;
      __asm__ volatile (
        "mcr p15, 0, %0, c7, c10, 5"
@@ -96,7 +96,7 @@
      __asm__ volatile (
      ".word 0xF57FF050 | 0xe" : : : "memory");
 #endif
-   } else {
+   } else if (VM_Version::arm_arch() == 6) {
      intptr_t zero = 0;
      __asm__ volatile (
        "mcr p15, 0, %0, c7, c10, 5"
